<script type="module">
  const script = (
    attribute,
    storageKey,
    defaultTheme,
    forcedTheme,
    themes,
    value,
    enableSystem,
    enableColorScheme
  ) => {
    const el = document.documentElement;
    const systemThemes = ["light", "dark"];

    function updateDOM(theme) {
      const attributes = Array.isArray(attribute) ? attribute : [attribute];

      attributes.forEach((attr) => {
        const isClass = attr === "class";
        const classes =
          isClass && value ? themes.map((t) => value[t] || t) : themes;
        if (isClass) {
          el.classList.remove(...classes);
          el.classList.add(value && value[theme] ? value[theme] : theme);
        } else {
          el.setAttribute(attr, theme);
        }
      });

      setColorScheme(theme);
    }

    function setColorScheme(theme) {
      if (enableColorScheme && systemThemes.includes(theme)) {
        el.style.colorScheme = theme;
      }
    }

    function getSystemTheme() {
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "light";
    }

    try {
      const themeName = localStorage.getItem(storageKey) || defaultTheme;
      const isSystem = enableSystem && themeName === "system";
      const theme = isSystem ? getSystemTheme() : themeName;
      updateDOM(theme);
    } catch (e) {
      //
    }
  };

  const disableAnimation = (nonce) => {
    const css = document.createElement("style");
    if (nonce) css.setAttribute("nonce", nonce);
    css.appendChild(
      document.createTextNode(
        `*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`
      )
    );
    document.head.appendChild(css);

    return () => {
      // Force restyle
      (() => window.getComputedStyle(document.body))();

      // Wait for next tick before removing
      setTimeout(() => {
        document.head.removeChild(css);
      }, 1);
    };
  };

  disableAnimation();
  script("class", "theme", "system", undefined, [], undefined, true, true);
</script>
